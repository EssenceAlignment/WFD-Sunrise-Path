# Docker Compose optimized for Apple M3 Pro (12-core)
# Performance tuning for local development

services:
  postgres:
    image: postgres:16-alpine
    container_name: recovery-compass-db
    environment:
      POSTGRES_DB: recovery_compass
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    # M3 Pro optimizations
    deploy:
      resources:
        limits:
          cpus: '4'          # Allocate 4 cores for DB
          memory: 4G
        reservations:
          cpus: '2'
          memory: 2G
    # PostgreSQL performance tuning for M3
    command: >
      postgres
      -c shared_buffers=1GB
      -c effective_cache_size=3GB
      -c maintenance_work_mem=256MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=64MB
      -c max_parallel_workers_per_gather=4
      -c max_parallel_workers=8
      -c max_parallel_maintenance_workers=4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    platform: linux/arm64/v8  # Native ARM64 for M3

  redis:
    image: redis:7-alpine
    container_name: recovery-compass-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    # M3 Pro optimizations
    deploy:
      resources:
        limits:
          cpus: '2'          # Redis is single-threaded, but allocate for background tasks
          memory: 2G
        reservations:
          cpus: '1'
          memory: 512M
    # Redis performance tuning
    command: >
      redis-server
      --maxmemory 1gb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --rdbcompression yes
      --rdbchecksum yes
      --dir /data
      --appendonly yes
      --appendfsync everysec
      --no-appendfsync-on-rewrite no
      --auto-aof-rewrite-percentage 100
      --auto-aof-rewrite-min-size 64mb
      --tcp-backlog 511
      --tcp-keepalive 60
      --timeout 0
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    platform: linux/arm64/v8  # Native ARM64 for M3

  # App service commented out until server.js is available
  # app:
  #   build:
  #     context: ../
  #     dockerfile: recovery-compass-docker/Dockerfile.m3
  #     args:
  #       - BUILDPLATFORM=linux/arm64
  #   container_name: recovery-compass-app
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     NODE_ENV: development
  #     DATABASE_URL: postgresql://postgres:${DB_PASSWORD}@postgres:5432/recovery_compass
  #     REDIS_URL: redis://redis:6379
  #     # Node.js optimizations for M3
  #     UV_THREADPOOL_SIZE: 12  # Match CPU cores
  #     NODE_OPTIONS: "--max-old-space-size=4096"
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ../src:/app/src:delegated        # Use delegated for better performance
  #     - ../public:/app/public:delegated
  #     - /app/node_modules                # Anonymous volume for dependencies
  #   # M3 Pro optimizations
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '6'          # Use remaining cores for app
  #         memory: 8G
  #       reservations:
  #         cpus: '3'
  #         memory: 4G
  #   platform: linux/arm64/v8

secrets:
  db_password:
    file: .env.secrets

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis

# Docker performance settings for M3 Pro
x-m3-performance:
  &default-logging
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
      compress: "true"

# Network optimizations
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.driver.mtu: 1450  # Optimize for container communication
