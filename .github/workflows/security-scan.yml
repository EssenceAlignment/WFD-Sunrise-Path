name: Security Gate

on:
  push:
    branches: [main, feat/*]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0'  # Weekly scan on Sundays

permissions:
  contents: read
  security-events: write
  id-token: write

jobs:
  python-security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install security tools
        run: |
          pip install pip-audit safety bandit

      - name: Run pip-audit
        run: |
          for req in $(find . -name requirements.txt -not -path "./Manus/*"); do
            echo "Scanning $req"
            pip-audit --requirement "$req" --desc || true
          done

      - name: Run safety check
        run: |
          for req in $(find . -name requirements.txt -not -path "./Manus/*"); do
            echo "Safety check $req"
            safety check --file "$req" || true
          done

      - name: Run security orchestrator
        run: |
          python scripts/security/security_orchestrator.py --scan-only

  npm-security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Run npm audit
        run: |
          for pkg in $(find . -name package.json -not -path "*/node_modules/*" -not -path "./Manus/*"); do
            dir=$(dirname "$pkg")
            echo "Auditing $dir"
            (cd "$dir" && npm audit || true)
          done

  container-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker Images
        run: |
          docker-compose build

      - name: Trivy Container Scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'image'
          image-ref: 'rc-funding-dashboard:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'

      - name: Upload Trivy Results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  sbom-sign:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          format: cyclonedx-json
          output-file: sbom.json
          upload-artifact: true

      - name: Install Cosign (verified release)
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.5.2'

      - name: Sign SBOM with Cosign OIDC
        if: github.event_name != 'pull_request'
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign-blob --yes --bundle sbom.json.bundle sbom.json

      - name: Verify signature (self-test)
        if: github.event_name != 'pull_request'
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign verify-blob --certificate-identity-regexp "https://github.com/${GITHUB_REPOSITORY}/.github/workflows/security-scan.yml@refs/heads/.*" \
               --certificate-oidc-issuer https://token.actions.githubusercontent.com \
               --bundle sbom.json.bundle sbom.json

  secret-scanning:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-fix-pr:
    needs: [python-security, npm-security]
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run security fixes
        run: |
          python scripts/security/security_orchestrator.py --fix-all --no-commit

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: 'fix: automated security updates'
          title: 'ðŸ”’ Automated Security Updates'
          body: |
            ## Automated Security Fixes

            This PR contains automated security updates generated by the Security Orchestrator.

            ### Changes:
            - Updated vulnerable dependencies
            - Applied security patches

            Please review the changes before merging.
          branch: automated-security-updates
          delete-branch: true
