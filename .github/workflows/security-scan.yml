name: ASVS Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  semgrep:
    name: Semgrep ASVS L2 Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Run Semgrep
        run: |
          pip install semgrep
          semgrep --config=.semgrep/ --sarif --output=semgrep.sarif . || true

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: semgrep.sarif

      - name: Generate HTML Report
        if: always()
        run: |
          mkdir -p artifacts
          echo "<html><head><title>ASVS Security Report</title></head><body>" > artifacts/asvs.html
          echo "<h1>ASVS Level 2 Security Scan Report</h1>" >> artifacts/asvs.html
          echo "<p>Generated: $(date)</p>" >> artifacts/asvs.html
          echo "<h2>Summary</h2>" >> artifacts/asvs.html

          if [ -f semgrep.sarif ]; then
            # Extract findings count from SARIF
            FINDINGS=$(cat semgrep.sarif | jq '.runs[0].results | length')
            echo "<p>Total findings: $FINDINGS</p>" >> artifacts/asvs.html

            # Parse SARIF and generate HTML table
            echo "<h2>Findings</h2><table border='1'>" >> artifacts/asvs.html
            echo "<tr><th>Rule</th><th>Severity</th><th>File</th><th>Message</th></tr>" >> artifacts/asvs.html

            cat semgrep.sarif | jq -r '.runs[0].results[] |
              "<tr><td>\(.ruleId)</td><td>\(.level)</td><td>\(.locations[0].physicalLocation.artifactLocation.uri)</td><td>\(.message.text)</td></tr>"' >> artifacts/asvs.html

            echo "</table>" >> artifacts/asvs.html
          else
            echo "<p>No security findings detected!</p>" >> artifacts/asvs.html
          fi

          echo "</body></html>" >> artifacts/asvs.html

      - name: Upload HTML Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: asvs-report
          path: artifacts/asvs.html
          retention-days: 30

  zaproxy:
    name: OWASP ZAP Dynamic Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -j -l WARN'

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: zap-report
          path: report_html.html
          retention-days: 30

  security-review:
    name: Security Review Status
    runs-on: ubuntu-latest
    needs: [semgrep, zaproxy]
    if: always()

    steps:
      - name: Update manifest security status
        run: |
          echo "Security scan completed"
          echo "Results available in artifacts"
          # In a real implementation, this would update the registry manifests
          # with security_review_status field
