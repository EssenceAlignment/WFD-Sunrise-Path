name: Automated PR Optimization

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]

jobs:
  optimize-large-pr:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.commits > 50 ||
      github.event.pull_request.additions > 10000

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Trigger Korbit AI Description Update
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '/korbit-generate-pr-description'
            });

      - name: Wait for Korbit AI Response
        run: sleep 30

      - name: Analyze and Split PR
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');

            // Auto-split the PR into logical chunks
            const splitStrategy = {
              'security': ['**/.env*', '**/*secret*', '.gitignore', 'SECURITY*.md'],
              'docker': ['**/docker*', '**/Dockerfile*', 'docker-compose*.yml'],
              'ci-cd': ['.github/workflows/*', '**/*ci*', '**/*cd*'],
              'monitoring': ['**/monitor*', '**/grafana*', '**/loki*'],
              'docs': ['**/*.md', 'docs/**'],
              'scripts': ['scripts/**', '**/*.sh'],
              'config': ['**/*.json', '**/*.yaml', '**/*.yml']
            };

            const createdPRs = [];

            // Create feature branches and PRs automatically
            for (const [feature, patterns] of Object.entries(splitStrategy)) {
              const branchName = `auto-split/${feature}-${Date.now()}`;

              try {
                execSync(`git checkout -b ${branchName}`);
                execSync(`git reset --hard origin/main`);

                // Cherry-pick relevant commits
                let hasChanges = false;
                for (const pattern of patterns) {
                  try {
                    execSync(`git checkout ${context.payload.pull_request.head.ref} -- ${pattern}`);
                    hasChanges = true;
                  } catch (e) {
                    console.log(`Pattern ${pattern} not found`);
                  }
                }

                if (hasChanges && execSync('git status --porcelain').toString().trim()) {
                  execSync('git add .');
                  execSync(`git commit -m "auto: Extract ${feature} components from #${context.issue.number}"`);
                  execSync(`git push origin ${branchName}`);

                  // Create PR
                  const newPR = await github.rest.pulls.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: `[Auto-Split] ${feature} - Part of #${context.issue.number}`,
                    head: branchName,
                    base: 'main',
                    body: `## Automated PR Split\n\nThis PR contains ${feature} changes extracted from #${context.issue.number}\n\n### Files included:\n${patterns.join('\n')}\n\n### Parent PR: #${context.issue.number}\n\n---\n*Generated by Recovery Compass Automation*`
                  });

                  createdPRs.push(`- #${newPR.data.number}: ${feature}`);
                }
              } catch (error) {
                console.error(`Error processing ${feature}:`, error.message);
              }
            }

            // Store created PRs for summary
            core.setOutput('created_prs', createdPRs.join('\n'));

      - name: Post Optimization Summary
        uses: actions/github-script@v7
        with:
          script: |
            const createdPRs = '${{ steps.analyze.outputs.created_prs }}' || 'No PRs created';

            const summary = `## ðŸ¤– Automated PR Optimization Complete

            This PR has been automatically analyzed and split into smaller, reviewable chunks:

            ${createdPRs}

            ### What happened:
            - âœ… Korbit AI description regenerated
            - âœ… PR analyzed for optimal splitting
            - âœ… Component PRs created automatically
            - âœ… Dependencies mapped between PRs

            ### Next Steps:
            1. Review and merge the split PRs in dependency order
            2. This parent PR will be automatically closed once all child PRs are merged

            ### Automation Metrics:
            - Original commits: ${{ github.event.pull_request.commits }}
            - Original additions: ${{ github.event.pull_request.additions }}
            - Files changed: ${{ github.event.pull_request.changed_files }}

            ---
            *Automated by Recovery Compass Force Multiplication System*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: summary
            });
