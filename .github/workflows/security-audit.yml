name: Security Audit

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly scan on Sundays
  workflow_dispatch:  # Allow manual triggering

jobs:
  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ['.', 'welcome-to-docker', 'multi-container-app/app', 'multi-container-app-2/app']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.directory }}/package-lock.json

      - name: Check if package.json exists
        id: check_files
        run: |
          if [ -f "${{ matrix.directory }}/package.json" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Run npm audit
        if: steps.check_files.outputs.exists == 'true'
        working-directory: ${{ matrix.directory }}
        run: |
          echo "## Security Audit for ${{ matrix.directory }}" >> $GITHUB_STEP_SUMMARY
          npm audit --production 2>&1 | tee audit-report.txt || true

          # Generate summary
          if grep -q "found 0 vulnerabilities" audit-report.txt; then
            echo "✅ No vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Vulnerabilities detected:" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            npm audit --production --json | jq -r '.metadata.vulnerabilities | to_entries | map("\(.key): \(.value)") | .[]' >> $GITHUB_STEP_SUMMARY || true
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload audit report
        if: steps.check_files.outputs.exists == 'true' && always()
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-${{ matrix.directory }}-${{ github.run_id }}
          path: ${{ matrix.directory }}/audit-report.txt
          retention-days: 30

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          deny-licenses: GPL-3.0, AGPL-3.0
          comment-summary-in-pr: true

  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile:
          - recovery-compass-docker/Dockerfile.m3
          - welcome-to-docker/Dockerfile
          - multi-container-app/app/Dockerfile
          - multi-container-app-2/app/Dockerfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if Dockerfile exists
        id: check_dockerfile
        run: |
          if [ -f "${{ matrix.dockerfile }}" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Trivy vulnerability scanner
        if: steps.check_dockerfile.outputs.exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: ${{ matrix.dockerfile }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results
        if: steps.check_dockerfile.outputs.exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [npm-audit, codeql-analysis, docker-security]
    if: always()

    steps:
      - name: Generate Security Summary
        run: |
          echo "# 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Run Date**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered By**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "## Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Check job statuses
          if [ "${{ needs.npm-audit.result }}" == "success" ]; then
            echo "✅ NPM Audit: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ NPM Audit: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.codeql-analysis.result }}" == "success" ]; then
            echo "✅ CodeQL Analysis: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ CodeQL Analysis: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.docker-security.result }}" == "success" ]; then
            echo "✅ Docker Security: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Docker Security: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Review detailed reports in the Actions artifacts" >> $GITHUB_STEP_SUMMARY
          echo "2. Address any critical or high severity issues immediately" >> $GITHUB_STEP_SUMMARY
          echo "3. Update dependencies using \`npm audit fix\`" >> $GITHUB_STEP_SUMMARY
          echo "4. Review the [Security Policy](https://github.com/${{ github.repository }}/blob/main/SECURITY.md)" >> $GITHUB_STEP_SUMMARY
